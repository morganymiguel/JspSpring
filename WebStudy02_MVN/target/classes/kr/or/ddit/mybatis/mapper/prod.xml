<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.prod.dao.ProdDAO">

	<resultMap type="ProdVO" id="prodListMap" autoMapping="true">
		<id property="prodId" column="PROD_ID"/>
		<association property="buyer" javaType="BuyerVO" autoMapping="true" />
	</resultMap>
	<resultMap type="ProdVO" id="prodMap" autoMapping="true" extends="prodListMap">
		<collection property="memberList" ofType="MemberVO" autoMapping="true">
			<id property="memId" column="MEM_ID"/>
		</collection>
	</resultMap>
	
	<sql id="searchFrag">
		<trim prefix=" WHERE " prefixOverrides="AND">
			<if test="detailCondition neq null">
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(detailCondition.prodLgu)">
				AND	PROD_LGU = #{detailCondition.prodLgu}
				</if>
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(detailCondition.prodBuyer)">
				AND	PROD_BUYER = #{detailCondition.prodBuyer}
				</if>
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(detailCondition.prodName)">
				AND	INSTR(PROD_NAME, #{detailCondition.prodName}) > 0 
				</if>
			</if>
		</trim>
	</sql>
	
	<select id="selectTotalRecord" resultType="int" parameterType="PagingVO">
		SELECT COUNT(*)
		FROM PRODVIEW
		<include refid="searchFrag" />
	</select>
	
	<select id="selectProdList" resultMap="prodListMap" parameterType="PagingVO">
		WITH SORTPROD AS (
			SELECT PROD_ID, PROD_NAME, PROD_PRICE
			    , PROD_COST, PROD_MILEAGE
			    , BUYER_NAME
			    , LPROD_NM
			    , (
			        SELECT COUNT(DISTINCT CART_MEMBER)
			        FROM CART
			        WHERE PROD_ID = CART_PROD
			    ) MEM_COUNT
			FROM PRODVIEW
			<include refid="searchFrag" />
			ORDER BY ROWID DESC
		), RNUMPROD AS(
			SELECT ROWNUM RNUM, SORTPROD.*
			FROM SORTPROD
		)
		SELECT *
		FROM RNUMPROD
		WHERE RNUM BETWEEN #{startRow} AND #{endRow}
	</select>
	
	<select id="selectProd" parameterType="string" resultMap="prodMap" >
		WITH CARTVIEW AS(
		    SELECT DISTINCT CART_MEMBER, CART_PROD
		    FROM CART
		), CARTMEMBER AS(
		    SELECT CART_PROD, MEMBER.*
		    FROM CARTVIEW INNER JOIN MEMBER ON(CART_MEMBER = MEM_ID)
		)
		SELECT
		    PROD_ID, 			PROD_NAME,			PROD_LGU,    LPROD_NM, 
			PROD_COST,			PROD_PRICE, 
			PROD_SALE, 			PROD_OUTLINE,			PROD_DETAIL, 
			PROD_IMG, 			PROD_TOTALSTOCK,			TO_CHAR(PROD_INSDATE, 'YYYY-MM-DD') PROD_INSDATE, 
			PROD_PROPERSTOCK, 			PROD_SIZE,			PROD_COLOR, 
			PROD_DELIVERY, 			PROD_UNIT,			PROD_QTYIN, 
			PROD_QTYSALE, 			PROD_MILEAGE,
			
			PROD_BUYER 
			, BUYER_ID, BUYER_NAME, BUYER_CHARGER
			, BUYER_ADD1, BUYER_BANKNAME,	BUYER_BANKNO
		    , MEM_NAME, MEM_ID, MEM_ADD1, MEM_MAIL, MEM_MILEAGE
		    
		FROM PRODVIEW LEFT OUTER JOIN CARTMEMBER ON(PROD_ID = CART_PROD)
		WHERE PROD_ID = #{prodId}
	</select>
	
	<insert id="insertProd" parameterType="ProdVO">
		<selectKey order="BEFORE" resultType="string" keyProperty="prodId">
			SELECT #{prodLgu} || LPAD(NVL(TO_NUMBER(SUBSTR( MAX(PROD_ID) , 5 )), 0) + 1, 6, '0')
			FROM PROD
			WHERE PROD_LGU = #{prodLgu}
		</selectKey>
		INSERT INTO PROD
		(
			 PROD_ID
			, PROD_NAME
			, PROD_LGU
			, PROD_BUYER
			, PROD_COST
			, PROD_PRICE
			, PROD_SALE
			, PROD_OUTLINE
			, PROD_DETAIL
			, PROD_IMG
			, PROD_TOTALSTOCK
			, PROD_INSDATE
			, PROD_PROPERSTOCK
			, PROD_SIZE
			, PROD_COLOR
			, PROD_DELIVERY
			, PROD_UNIT
			, PROD_QTYIN
			, PROD_QTYSALE
			, PROD_MILEAGE
		)VALUES(
			#{prodId,jdbcType=VARCHAR}
			, #{prodName,jdbcType=VARCHAR}
			, #{prodLgu,jdbcType=CHAR}
			, #{prodBuyer,jdbcType=CHAR}
			, #{prodCost,jdbcType=NUMERIC}
			, #{prodPrice,jdbcType=NUMERIC}
			, #{prodSale,jdbcType=NUMERIC}
			, #{prodOutline,jdbcType=VARCHAR}
			, #{prodDetail,jdbcType=CLOB}
			, #{prodImg,jdbcType=VARCHAR}
			, #{prodTotalstock,jdbcType=NUMERIC}
			, TO_DATE(#{prodInsdate,jdbcType=DATE}, 'YYYY-MM-DD')
			, #{prodProperstock,jdbcType=NUMERIC}
			, #{prodSize,jdbcType=VARCHAR}
			, #{prodColor,jdbcType=VARCHAR}
			, #{prodDelivery,jdbcType=VARCHAR}
			, #{prodUnit,jdbcType=VARCHAR}
			, #{prodQtyin,jdbcType=NUMERIC}
			, #{prodQtysale,jdbcType=NUMERIC}
			, #{prodMileage,jdbcType=NUMERIC}
		)
	</insert>
	<update id="updateProd" parameterType="ProdVO">
		UPDATE PROD
		SET
			PROD_COST = #{prodCost,jdbcType=NUMERIC}
			, PROD_PRICE = #{prodPrice,jdbcType=NUMERIC}
			, PROD_SALE = #{prodSale,jdbcType=NUMERIC}
			, PROD_OUTLINE = #{prodOutline,jdbcType=VARCHAR}
			, PROD_DETAIL = #{prodDetail,jdbcType=CLOB}
			, PROD_IMG = #{prodImg,jdbcType=VARCHAR}
			, PROD_TOTALSTOCK = #{prodTotalstock,jdbcType=NUMERIC}
			, PROD_PROPERSTOCK = #{prodProperstock,jdbcType=NUMERIC}
			, PROD_SIZE = #{prodSize,jdbcType=VARCHAR}
			, PROD_COLOR = #{prodColor,jdbcType=VARCHAR}
			, PROD_DELIVERY = #{prodDelivery,jdbcType=VARCHAR}
			, PROD_UNIT = #{prodUnit,jdbcType=VARCHAR}
			, PROD_QTYIN = #{prodQtyin,jdbcType=NUMERIC}
			, PROD_QTYSALE = #{prodQtysale,jdbcType=NUMERIC}
			, PROD_MILEAGE = #{prodMileage,jdbcType=NUMERIC}
		WHERE PROD_ID = #{prodId,jdbcType=VARCHAR}
	</update>
</mapper>














